/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Classes.Question;
import Classes.RSAImages;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Windows_94
 */
public class MainMenu extends javax.swing.JFrame
{

	ArrayList<RSAImages> imgList = null;
	ArrayList<Question> qList = null;

	/**
	 * Creates new form MainMenu
	 */
	public MainMenu()
	{
		initComponents();
		
		File imgDirectory = new File("IMG/Signs/");
		
		Path p = Paths.get("TXT/questions.txt");
		//ToDo - Read All Lines, Use , Delimeter To Seperate Questions
		//ToDo - Use Bundles To Give 2 levels of difficulty 
		//(Humerous Wrong Answers for Easy, Similar Wrong Answers For Hard)
		Path p = Paths.get("file.xyx");
		List<String> uqestions = Files.readAllLines(p)

		try
		{
			qList = getAllQuestions(p);
			imgList = getAllImages(imgDirectory, true);
			
//			System.out.println(imgList.size());
			JOptionPane.showMessageDialog(null, qList);
		} catch (IOException ex){Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RSA Main Menu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{
		/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try
		{
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
			{
				if ("Nimbus".equals(info.getName()))
				{
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex)
		{
			java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex)
		{
			java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex)
		{
			java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex)
		{
			java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			public void run()
			{
				new MainMenu().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
	private ArrayList<RSAImages> getAllImages(File directory, boolean subDirectory) throws IOException
	{
		ArrayList<RSAImages> resultList = new ArrayList<>();

		File[] f = directory.listFiles();

		for (File file : f)
		{
			RSAImages image = new RSAImages();
			image.setCategory(directory.getName());
			image.setPath(file.getCanonicalPath());
			image.setImageName(file.getName());
			resultList.add(image);

			if (subDirectory && file.isDirectory())
			{
				ArrayList<RSAImages> tmp = getAllImages(file, true);
				if (tmp != null)
				{
					resultList.addAll(tmp);
				}
			}
		}

		if (resultList.size() > 0)
		{
			return resultList;
		}
		return null;
	}

	private ArrayList<Question> getAllQuestions(Path p)
	{
		try
		{
			Scanner sc = new Scanner(p);
			
			OUTER:
			while (sc.hasNext())
			{
				Question q = new Question();
				
				q.setAnswer(sc.nextLine());
				System.out.println(q.getAnswer());			
				
				q.setIncorrectAns1(sc.nextLine());
				System.out.println(q.getIncorrectAns1());			
				
				q.setIncorrectAns2(sc.nextLine());
				System.out.println(q.getIncorrectAns2());			
				
				q.setIncorrectAns3(sc.nextLine());
				System.out.println(q.getIncorrectAns3());
				
				switch (sc.nextLine()) //When empty line is reached
				{
					case "\n":
						qList.add(q); //Finish creating object and add to list
						break; //Return to While-Loop
					case "---": //Delimeter to signal end of file
						break OUTER; //Exit While Loop and return list of Question Objects
				}
			}
		} catch (IOException ex){Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);}
		return qList;
	}
}
